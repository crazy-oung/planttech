// DHT11(온습도), DS18B20(방수 온도센서), CDS(조도센서), LCD 합본


#include <OneWire.h>
#include <DallasTemperature.h>

#include <DHT.h>  

#include <LiquidCrystal_I2C.h>



// Data wire is plugged into port 2 on the Arduino
#define ONE_WIRE_BUS D7
#define DHTPIN D6         // DHT11 센서의 DATA를 연결한 DIGITAL 포트 (온습도 센서)
#define DHTTYPE DHT11       // DHT11을 사용함을 명시
// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);
DHT dht(DHTPIN, DHTTYPE);
// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature sensors(&oneWire);
LiquidCrystal_I2C lcd(0x27, 16, 2); //LCD 주소


/*
 * The setup function. We only start the sensors here
 */
void setup(void)
{
  // start serial port
  Serial.begin(115200);
  Serial.println("Dallas Temperature IC Control Library Demo");
  lcd.init(); //LCD 초기화
  lcd.backlight(); //LCD 백라이트
  dht.begin();
  // Start up the library
  sensors.begin();
}

/*
 * Main function, get and show the temperature
 */
void loop(void)
{ 

  delay(2000);

//float temp, humi; //온도와 습도 값이 저장될 변수 온습도값 소수 float 

  float temp = dht.readTemperature();
  float humi = dht.readHumidity(); 
  float f = dht.readTemperature(true);
  
 // int result = dht.read(humi, temp);  // 현재 온습도값 계산, 온습도 감지O --> 0 리턴
// 온습도 출력 시리얼
   //if (result == 0)  // 온습도 측정 O일때
  //{


 if (isnan(humi) || isnan(temp) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }
    Serial.print("temperature:"); 

    Serial.print(temp); //온도값 출력

    Serial.print(" humidity:");

    Serial.print(humi); //습도값 출력

    Serial.println();

  //}

 
  //delay(DHT11_RETRY_DELAY); // DHT11에서 권장하는 딜레이함수를 사용, 정상적인 값
  delay(2000);


  // call sensors.requestTemperatures() to issue a global temperature 
  // request to all devices on the bus
  Serial.print("Requesting temperatures...");
  sensors.requestTemperatures(); // Send the command to get temperatures
  Serial.println("DONE");
  // After we got the temperatures, we can print them here.
  // We use the function ByIndex, and as an example get the temperature from the first sensor only.
  float tempC = sensors.getTempCByIndex(0);

  // Check if reading was successful
  if(tempC != DEVICE_DISCONNECTED_C) 
  {
    Serial.print("Temperature for the device 1 (index 0) is: ");
    Serial.println(tempC);
  } 
  else
  {
    Serial.println("Error: Could not read temperature data");
  }


  Serial.print("CDS: ");
  Serial.println(analogRead(D5));
  delay(2000);

  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(analogRead(D5)); 
  delay(2000);

}
